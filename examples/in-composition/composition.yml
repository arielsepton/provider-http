apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: example
  labels: 
    crossplane.io/xrd: xdemos.releases.example.io
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: releases.example.io/v1alpha1
    kind: XDemo
  resources:
  - name: obtainJWTToken
    base:
      apiVersion: http.crossplane.io/v1alpha2
      kind: DisposableRequest
      metadata:
        name: obtain-jwt-token
      spec:
        deletionPolicy: Orphan
        forProvider:
          url: http://localhost:8000/v1/login/
          method: POST
          headers:
            Authorization:
              - "Basic {{ basic-auth:crossplane-system:token }}"

          shouldLoopInfinitely: true
          nextReconcile: 72h

          secretInjectionConfigs:
            - secretRef:
                name: obtained-token
                namespace: crossplane-system
              secretKey: token
              responsePath: .body.token
        providerConfigRef:
          name: http-conf
  - name: do-request
    base:
      apiVersion: http.crossplane.io/v1alpha2
      kind: Request
      metadata:
        name: laundry
      spec:
        forProvider:
          waitTimeout: 5m
          headers:
            Content-Type:
              - application/json
            Authorization:
              - ("Bearer {{ obtained-token:crossplane-system:token }}")
          payload:
            baseUrl: http://localhost:8000/v1/namespaces
            body: |
              {
                "name": "my-namespace"
              }
          mappings:
            - method: "POST"
              body: |
                {
                  name: .payload.body.name
                }
              url: .payload.baseUrl
              headers:
                Content-Type:
                  - application/json
                Authorization:
                - ("Bearer {{ obtained-token:crossplane-system:token }}")
            - method: "GET"
              url: (.payload.baseUrl + "/" + (.response.body.name))
            - method: "PUT"
              body: |
                {
                  name: .payload.body.name
                }
              url: (.payload.baseUrl + "/" + (.response.body.name))
            - method: "DELETE"
              url: (.payload.baseUrl + "/" + (.response.body.name))
        providerConfigRef:
          name: http-conf
